from collections import namedtuple

class AddressModes(object):
    Illegal                   = 0       # 44        .byte 0x44 ;illegal
    Inherent                  = 1       # 00        nop
    ImmediateByte             = 2       # 04 aa     mov a, #0xaa
    ImmediateWord             = 3       # e4 aa bb  movw a, #0xaabb
    Extended                  = 4       # 31 aa bb  call 0xaabb
    Direct                    = 5       # 05 aa     mov a, 0xaa
    DirectWithImmediateByte   = 6       # 85 aa bb  mov 0xaa, #0xbb
    Register                  = 7       # c8        inc r0
    RegisterWithImmediateByte = 8       # 88 aa     mov r0, #0xaa
    Pointer                   = 9       # 07        mov a, @ep
    PointerWithImmediateByte  = 10      # 87 aa     mov @ep, #0xaa
    Index                     = 11      # d6 aa     movw @ix+0xaa, a
    IndexWithImmediateByte    = 12      # 86 aa bb  mov @ix+0xaa, #0xbb
    BitDirect                 = 13      # a0 aa     clrb 0xaa:0
    BitDirectWithRelative     = 14      # b0 aa 05  bbc 0xaa:0, 0xe005
    Relative                  = 15      # fd 05     beq 0xe005
    Vector                    = 16      # e8        callv #0

InstructionLengths = {
    AddressModes.Illegal:       1,
    AddressModes.Inherent:      1,
    AddressModes.ImmediateByte: 2,
    AddressModes.ImmediateWord: 3,
    AddressModes.Extended:      3,
    AddressModes.Direct:        2,
    AddressModes.DirectWithImmediateByte: 3,
    AddressModes.Register:      1,
    AddressModes.RegisterWithImmediateByte: 2,
    AddressModes.Pointer:       1,
    AddressModes.PointerWithImmediateByte: 2,
    AddressModes.Index:         2,
    AddressModes.IndexWithImmediateByte: 3,
    AddressModes.BitDirect:     2,
    AddressModes.BitDirectWithRelative: 3,
    AddressModes.Relative:      2,
    AddressModes.Vector:        1,
    }


class FlowTypes(object):
    Continue = 0                    # nop, mulu a, rolc a, ...
    UnconditionalJump = 1           # jmp
    IndirectUnconditionalJump = 2   # jmp @a, xchw a,pc
    ConditionalJump = 3             # beq, bne, bhs, blo, ...
    SubroutineCall = 4              # call
    IndirectSubroutineCall = 5      # callv
    SubroutineReturn = 6            # ret, reti


class Flags(object):
    N = 0   # Negative
    Z = 1   # Zero
    V = 2   # Overflow
    C = 3   # Carry


Opcode = namedtuple("Opcode", (
        "number",                   # opcode byte
        "disasm_template",          # string like "mov a, @ix+IXD"
        "addr_mode",                # an AddressModes constant
        "flow_type",                # a FlowTypes constant
        "affected_flags"))          # tuple of zero or more Flags constants


Opcodes = (
    # 0x00
    Opcode(number=0x00,
           disasm_template="nop",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x01,
           disasm_template="mulu a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x02,
           disasm_template="rolc a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.C)),
    Opcode(number=0x03,
           disasm_template="rorc a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.C)),
    Opcode(number=0x04,
           disasm_template="mov a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x05,
           disasm_template="mov a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x06,
           disasm_template="mov a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x07,
           disasm_template="mov a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x08,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x09,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0a,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0b,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0c,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0d,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0e,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x0f,
           disasm_template="mov a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),

    # 0x10
    Opcode(number=0x10,
           disasm_template="swap",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x11,
           disasm_template="divu a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x12,
           disasm_template="cmp a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x13,
           disasm_template="cmpw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x14,
           disasm_template="cmp a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x15,
           disasm_template="cmp a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x16,
           disasm_template="cmp a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x17,
           disasm_template="cmp a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x18,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x19,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1a,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1b,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1c,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1d,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1e,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x1f,
           disasm_template="cmp a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),

    # 0x20
    Opcode(number=0x20,
           disasm_template="ret",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.SubroutineReturn,
           affected_flags=()),
    Opcode(number=0x21,
           disasm_template="jmp EXT",
           addr_mode=AddressModes.Extended,
           flow_type=FlowTypes.UnconditionalJump,
           affected_flags=()),
    Opcode(number=0x22,
           disasm_template="addc a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x23,
           disasm_template="addcw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x24,
           disasm_template="addc a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x25,
           disasm_template="addc a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x26,
           disasm_template="addc a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x27,
           disasm_template="addc a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x28,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x29,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2a,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2b,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2c,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2d,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2e,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x2f,
           disasm_template="addc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),

    # 0x30
    Opcode(number=0x30,
           disasm_template="reti",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.SubroutineReturn,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x31,
           disasm_template="call EXT",
           addr_mode=AddressModes.Extended,
           flow_type=FlowTypes.SubroutineCall,
           affected_flags=()),
    Opcode(number=0x32,
           disasm_template="subc a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x33,
           disasm_template="subcw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x34,
           disasm_template="subc a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x35,
           disasm_template="subc a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x36,
           disasm_template="subc a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x37,
           disasm_template="subc a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x38,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x39,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3a,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3b,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3c,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3d,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3e,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x3f,
           disasm_template="subc a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),

    # 0x40
    Opcode(number=0x40,
           disasm_template="pushw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x41,
           disasm_template="pushw ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x42,
           disasm_template="xch a, t",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x43,
           disasm_template="xchw a, t",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x44,
           disasm_template=".byte OPC",
           addr_mode=AddressModes.Illegal,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x45,
           disasm_template="mov DIR, a",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x46,
           disasm_template="mov @ix+IXD, a",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x47,
           disasm_template="mov @ep, a",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x48,
           disasm_template="mov r0, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x49,
           disasm_template="mov r1, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4a,
           disasm_template="mov r2, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4b,
           disasm_template="mov r3, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4c,
           disasm_template="mov r4, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4d,
           disasm_template="mov r5, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4e,
           disasm_template="mov r6, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x4f,
           disasm_template="mov r7, a",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=()),

    # 0x50
    Opcode(number=0x50,
           disasm_template="popw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x51,
           disasm_template="popw ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x52,
           disasm_template="xor a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x53,
           disasm_template="xorw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x54,
           disasm_template="xor a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x55,
           disasm_template="xor a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x56,
           disasm_template="xor a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x57,
           disasm_template="xor a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x58,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x59,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5a,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5b,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5c,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5d,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5e,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),
    Opcode(number=0x5f,
           disasm_template="xor a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.V,)),

    # 0x60
    Opcode(number=0x60,
           disasm_template="mov a, EXT",
           addr_mode=AddressModes.Extended,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x61,
           disasm_template="mov EXT, a",
          addr_mode=AddressModes.Extended,
          flow_type=FlowTypes.Continue,
          affected_flags=()),
    Opcode(number=0x62,
           disasm_template="and a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x63,
           disasm_template="andw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x64,
           disasm_template="and a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x65,
           disasm_template="and a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x66,
           disasm_template="and a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x67,
           disasm_template="and a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x68,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x69,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6a,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6b,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6c,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6d,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6e,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x6f,
           disasm_template="and a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),

    # 0x70
    Opcode(number=0x70,
           disasm_template="movw a, ps",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x71,
           disasm_template="movw ps, a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x72,
           disasm_template="or a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x73,
           disasm_template="orw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x74,
           disasm_template="or a, #IMB",
           addr_mode=AddressModes.ImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x75,
           disasm_template="or a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x76,
           disasm_template="or a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x77,
           disasm_template="or a, @ep",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x78,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x79,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7a,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7b,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7c,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7d,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7e,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0x7f,
           disasm_template="or a, rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),

    # 0x80
    Opcode(number=0x80,
           disasm_template="clri",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x81,
           disasm_template="clrc",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.C,)),
    Opcode(number=0x82,
           disasm_template="mov @a, t",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x83,
           disasm_template="movw @a, t",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x84,
           disasm_template="daa",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x85,
           disasm_template="mov DIR, #IMB",
           addr_mode=AddressModes.DirectWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x86,
           disasm_template="mov @ix+IXD, #IMB",
           addr_mode=AddressModes.IndexWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x87,
           disasm_template="mov @ep, #IMB",
           addr_mode=AddressModes.PointerWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x88,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x89,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8a,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8b,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8c,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8d,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8e,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x8f,
           disasm_template="mov rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=()),

    # 0x90
    Opcode(number=0x90,
           disasm_template="seti",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0x91,
           disasm_template="setc",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.C,)),
    Opcode(number=0x92,
           disasm_template="mov a, @a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x93,
           disasm_template="movw a, @a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0x94,
           disasm_template="das",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x95,
           disasm_template="cmp DIR, #IMB",
           addr_mode=AddressModes.DirectWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x96,
           disasm_template="cmp @ix+IXD, #IMB",
           addr_mode=AddressModes.IndexWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x97,
           disasm_template="cmp @ep, #IMB",
           addr_mode=AddressModes.PointerWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x98,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x99,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9a,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9b,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9c,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9d,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9e,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),
    Opcode(number=0x9f,
           disasm_template="cmp rREG, #IMB",
           addr_mode=AddressModes.RegisterWithImmediateByte,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V, Flags.C)),

    # 0xa0
    Opcode(number=0xa0,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa1,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa2,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa3,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa4,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa5,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa6,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa7,
           disasm_template="clrb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa8,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xa9,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xaa,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xab,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xac,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xad,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xae,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xaf,
           disasm_template="setb DIR:BIT",
           addr_mode=AddressModes.BitDirect,
           flow_type=FlowTypes.Continue,
           affected_flags=()),

    # 0xb0
    Opcode(number=0xb0,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb1,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb2,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb3,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb4,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb5,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb6,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb7,
           disasm_template="bbc DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb8,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xb9,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xba,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xbb,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xbc,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xbd,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xbe,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),
    Opcode(number=0xbf,
           disasm_template="bbs DIR:BIT, REL",
           addr_mode=AddressModes.BitDirectWithRelative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=(Flags.Z,)),

    # 0xc0
    Opcode(number=0xc0,
           disasm_template="incw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xc1,
           disasm_template="incw sp",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xc2,
           disasm_template="incw ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xc3,
           disasm_template="incw ep",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xc4,
           disasm_template="movw a, EXT",
           addr_mode=AddressModes.Extended,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xc5,
           disasm_template="movw a, DIR",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xc6,
           disasm_template="movw a, @ix+IXD",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xc7,
           disasm_template="movw a, @ep",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xc8,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xc9,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xca,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xcb,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xcc,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xcd,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xce,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xcf,
           disasm_template="inc rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),

    # 0xd0
    Opcode(number=0xd0,
           disasm_template="decw a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xd1,
           disasm_template="decw sp",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd2,
           disasm_template="decw ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd3,
           disasm_template="decw ep",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd4,
           disasm_template="movw EXT, a",
           addr_mode=AddressModes.Extended,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd5,
           disasm_template="movw DIR, a",
           addr_mode=AddressModes.Direct,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd6,
           disasm_template="movw @ix+IXD, a",
           addr_mode=AddressModes.Index,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd7,
           disasm_template="movw @ep, a",
           addr_mode=AddressModes.Pointer,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xd8,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xd9,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xda,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xdb,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xdc,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xdd,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xde,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),
    Opcode(number=0xdf,
           disasm_template="dec rREG",
           addr_mode=AddressModes.Register,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z, Flags.V)),

    # 0xe0
    Opcode(number=0xe0,
           disasm_template="jmp @a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.IndirectUnconditionalJump,
           affected_flags=()),
    Opcode(number=0xe1,
           disasm_template="movw sp, a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe2,
           disasm_template="movw ix, a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe3,
           disasm_template="movw ep, a",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe4,
           disasm_template="movw a, #IMW",
           addr_mode=AddressModes.ImmediateWord,
           flow_type=FlowTypes.Continue,
           affected_flags=(Flags.N, Flags.Z)),
    Opcode(number=0xe5,
           disasm_template="movw sp, #IMW",
           addr_mode=AddressModes.ImmediateWord,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe6,
           disasm_template="movw ix, #IMW",
           addr_mode=AddressModes.ImmediateWord,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe7,
           disasm_template="movw ep, #IMW",
           addr_mode=AddressModes.ImmediateWord,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xe8,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xe9,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xea,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xeb,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xec,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xed,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xee,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),
    Opcode(number=0xef,
           disasm_template="callv #VEC",
           addr_mode=AddressModes.Vector,
           flow_type=FlowTypes.IndirectSubroutineCall,
           affected_flags=()),

    # 0xf0
    Opcode(number=0xf0,
           disasm_template="movw a, pc",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf1,
           disasm_template="movw a, sp",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf2,
           disasm_template="movw a, ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf3,
           disasm_template="movw a, ep",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf4,
           disasm_template="xchw a, pc",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf5,
           disasm_template="xchw a, sp",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf6,
           disasm_template="xchw a, ix",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf7,
           disasm_template="xchw a, ep",
           addr_mode=AddressModes.Inherent,
           flow_type=FlowTypes.Continue,
           affected_flags=()),
    Opcode(number=0xf8,
           disasm_template="bhs REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xf9,
           disasm_template="blo REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xfa,
           disasm_template="bp REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xfb,
           disasm_template="bn REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xfc,
           disasm_template="bne REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xfd,
           disasm_template="beq REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xfe,
           disasm_template="bge REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    Opcode(number=0xff,
           disasm_template="blt REL",
           addr_mode=AddressModes.Relative,
           flow_type=FlowTypes.ConditionalJump,
           affected_flags=()),
    )
